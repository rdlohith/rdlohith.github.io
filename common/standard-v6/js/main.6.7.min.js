(() => { var webVitals = window.webVitals || function (e) { "use strict"; var n, t, r, i, o, a = -1, c = function (e) { addEventListener("pageshow", (function (n) { n.persisted && (a = n.timeStamp, e(n)) }), !0) }, u = function () { return window.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0] }, s = function () { var e = u(); return e && e.activationStart || 0 }, f = function (e, n) { var t = u(), r = "navigate"; return a >= 0 ? r = "back-forward-cache" : t && (document.prerendering || s() > 0 ? r = "prerender" : document.wasDiscarded ? r = "restore" : t.type && (r = t.type.replace(/_/g, "-"))), { name: e, value: void 0 === n ? -1 : n, rating: "good", delta: 0, entries: [], id: "v3-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12), navigationType: r } }, d = function (e, n, t) { try { if (PerformanceObserver.supportedEntryTypes.includes(e)) { var r = new PerformanceObserver((function (e) { Promise.resolve().then((function () { n(e.getEntries()) })) })); return r.observe(Object.assign({ type: e, buffered: !0 }, t || {})), r } } catch (e) { } }, l = function (e, n, t, r) { var i, o; return function (a) { n.value >= 0 && (a || r) && ((o = n.value - (i || 0)) || void 0 === i) && (i = n.value, n.delta = o, n.rating = function (e, n) { return e > n[1] ? "poor" : e > n[0] ? "needs-improvement" : "good" }(n.value, t), e(n)) } }, p = function (e) { requestAnimationFrame((function () { return requestAnimationFrame((function () { return e() })) })) }, v = function (e) { var n = function (n) { "pagehide" !== n.type && "hidden" !== document.visibilityState || e(n) }; addEventListener("visibilitychange", n, !0), addEventListener("pagehide", n, !0) }, m = function (e) { var n = !1; return function (t) { n || (e(t), n = !0) } }, h = -1, g = function () { return "hidden" !== document.visibilityState || document.prerendering ? 1 / 0 : 0 }, T = function (e) { "hidden" === document.visibilityState && h > -1 && (h = "visibilitychange" === e.type ? e.timeStamp : 0, C()) }, y = function () { addEventListener("visibilitychange", T, !0), addEventListener("prerenderingchange", T, !0) }, C = function () { removeEventListener("visibilitychange", T, !0), removeEventListener("prerenderingchange", T, !0) }, E = function () { return h < 0 && (h = g(), y(), c((function () { setTimeout((function () { h = g(), y() }), 0) }))), { get firstHiddenTime() { return h } } }, L = function (e) { document.prerendering ? addEventListener("prerenderingchange", (function () { return e() }), !0) : e() }, b = [1800, 3e3], S = function (e, n) { n = n || {}, L((function () { var t, r = E(), i = f("FCP"), o = d("paint", (function (e) { e.forEach((function (e) { "first-contentful-paint" === e.name && (o.disconnect(), e.startTime < r.firstHiddenTime && (i.value = Math.max(e.startTime - s(), 0), i.entries.push(e), t(!0))) })) })); o && (t = l(e, i, b, n.reportAllChanges), c((function (r) { i = f("FCP"), t = l(e, i, b, n.reportAllChanges), p((function () { i.value = performance.now() - r.timeStamp, t(!0) })) }))) })) }, w = [.1, .25], P = function (e, n) { n = n || {}, S(m((function () { var t, r = f("CLS", 0), i = 0, o = [], a = function (e) { e.forEach((function (e) { if (!e.hadRecentInput) { var n = o[0], t = o[o.length - 1]; i && e.startTime - t.startTime < 1e3 && e.startTime - n.startTime < 5e3 ? (i += e.value, o.push(e)) : (i = e.value, o = [e]) } })), i > r.value && (r.value = i, r.entries = o, t()) }, u = d("layout-shift", a); u && (t = l(e, r, w, n.reportAllChanges), v((function () { a(u.takeRecords()), t(!0) })), c((function () { i = 0, r = f("CLS", 0), t = l(e, r, w, n.reportAllChanges), p((function () { return t() })) })), setTimeout(t, 0)) }))) }, F = { passive: !0, capture: !0 }, I = new Date, A = function (e, i) { n || (n = i, t = e, r = new Date, k(removeEventListener), M()) }, M = function () { if (t >= 0 && t < r - I) { var e = { entryType: "first-input", name: n.type, target: n.target, cancelable: n.cancelable, startTime: n.timeStamp, processingStart: n.timeStamp + t }; i.forEach((function (n) { n(e) })), i = [] } }, D = function (e) { if (e.cancelable) { var n = (e.timeStamp > 1e12 ? new Date : performance.now()) - e.timeStamp; "pointerdown" == e.type ? function (e, n) { var t = function () { A(e, n), i() }, r = function () { i() }, i = function () { removeEventListener("pointerup", t, F), removeEventListener("pointercancel", r, F) }; addEventListener("pointerup", t, F), addEventListener("pointercancel", r, F) }(n, e) : A(n, e) } }, k = function (e) { ["mousedown", "keydown", "touchstart", "pointerdown"].forEach((function (n) { return e(n, D, F) })) }, B = [100, 300], x = function (e, r) { r = r || {}, L((function () { var o, a = E(), u = f("FID"), s = function (e) { e.startTime < a.firstHiddenTime && (u.value = e.processingStart - e.startTime, u.entries.push(e), o(!0)) }, p = function (e) { e.forEach(s) }, h = d("first-input", p); o = l(e, u, B, r.reportAllChanges), h && v(m((function () { p(h.takeRecords()), h.disconnect() }))), h && c((function () { var a; u = f("FID"), o = l(e, u, B, r.reportAllChanges), i = [], t = -1, n = null, k(addEventListener), a = s, i.push(a), M() })) })) }, N = 0, R = 1 / 0, H = 0, O = function (e) { e.forEach((function (e) { e.interactionId && (R = Math.min(R, e.interactionId), H = Math.max(H, e.interactionId), N = H ? (H - R) / 7 + 1 : 0) })) }, _ = function () { return o ? N : performance.interactionCount || 0 }, j = function () { "interactionCount" in performance || o || (o = d("event", O, { type: "event", buffered: !0, durationThreshold: 0 })) }, q = [200, 500], V = 0, z = function () { return _() - V }, G = [], J = {}, K = function (e) { var n = G[G.length - 1], t = J[e.interactionId]; if (t || G.length < 10 || e.duration > n.latency) { if (t) t.entries.push(e), t.latency = Math.max(t.latency, e.duration); else { var r = { id: e.interactionId, latency: e.duration, entries: [e] }; J[r.id] = r, G.push(r) } G.sort((function (e, n) { return n.latency - e.latency })), G.splice(10).forEach((function (e) { delete J[e.id] })) } }, Q = function (e, n) { n = n || {}, L((function () { j(); var t, r = f("INP"), i = function (e) { e.forEach((function (e) { e.interactionId && K(e), "first-input" === e.entryType && !G.some((function (n) { return n.entries.some((function (n) { return e.duration === n.duration && e.startTime === n.startTime })) })) && K(e) })); var n, i = (n = Math.min(G.length - 1, Math.floor(z() / 50)), G[n]); i && i.latency !== r.value && (r.value = i.latency, r.entries = i.entries, t()) }, o = d("event", i, { durationThreshold: n.durationThreshold || 40 }); t = l(e, r, q, n.reportAllChanges), o && (o.observe({ type: "first-input", buffered: !0 }), v((function () { i(o.takeRecords()), r.value < 0 && z() > 0 && (r.value = 0, r.entries = []), t(!0) })), c((function () { G = [], V = _(), r = f("INP"), t = l(e, r, q, n.reportAllChanges) }))) })) }, U = [2500, 4e3], W = {}, X = function (e, n) { n = n || {}, L((function () { var t, r = E(), i = f("LCP"), o = function (e) { var n = e[e.length - 1]; n && n.startTime < r.firstHiddenTime && (i.value = Math.max(n.startTime - s(), 0), i.entries = [n], t()) }, a = d("largest-contentful-paint", o); if (a) { t = l(e, i, U, n.reportAllChanges); var u = m((function () { W[i.id] || (o(a.takeRecords()), a.disconnect(), W[i.id] = !0, t(!0)) }));["keydown", "click"].forEach((function (e) { addEventListener(e, u, !0) })), v(u), c((function (r) { i = f("LCP"), t = l(e, i, U, n.reportAllChanges), p((function () { i.value = performance.now() - r.timeStamp, W[i.id] = !0, t(!0) })) })) } })) }, Y = [800, 1800], Z = function e(n) { document.prerendering ? L((function () { return e(n) })) : "complete" !== document.readyState ? addEventListener("load", (function () { return e(n) }), !0) : setTimeout(n, 0) }, $ = function (e, n) { n = n || {}; var t = f("TTFB"), r = l(e, t, Y, n.reportAllChanges); Z((function () { var i = u(); if (i) { var o = i.responseStart; if (o <= 0 || o > performance.now()) return; t.value = Math.max(o - s(), 0), t.entries = [i], r(!0), c((function () { t = f("TTFB", 0), (r = l(e, t, Y, n.reportAllChanges))(!0) })) } })) }; return e.CLSThresholds = w, e.FCPThresholds = b, e.FIDThresholds = B, e.INPThresholds = q, e.LCPThresholds = U, e.TTFBThresholds = Y, e.getCLS = P, e.getFCP = S, e.getFID = x, e.getINP = Q, e.getLCP = X, e.getTTFB = $, e.onCLS = P, e.onFCP = S, e.onFID = x, e.onINP = Q, e.onLCP = X, e.onTTFB = $, Object.defineProperty(e, "__esModule", { value: !0 }), e }({}), dataLayer = window.dataLayer || []; function isSessionStorageAvailable() { try { sessionStorage.setItem("__test", "testValue") } catch (e) { return !1 } return sessionStorage.removeItem("__test"), !0 } $(document).ready((function () { $("body").removeClass("no-js"), !1 !== function detectIE() { var ua = window.navigator.userAgent, msie = ua.indexOf("MSIE "); if (msie > 0) return parseInt(ua.substring(msie + 5, ua.indexOf(".", msie)), 10); if (ua.indexOf("Trident/") > 0) { var rv = ua.indexOf("rv:"); return parseInt(ua.substring(rv + 3, ua.indexOf(".", rv)), 10) } return !1 }() && $("body").addClass("ie"), navigator.userAgent.match(/(iPod|iPhone|iPad)/i) && $("body").addClass("ios"); var mobile = 767, tablet = 960, animationSpeed = 350; function centerHero() { var halfHeroHeight = Math.round(($(".hero").height() - $("header").height() - $(".roof").height()) / 2); $(".hero > .text").each((function () { $(this).css("bottom", Math.round(halfHeroHeight - $(this).height() / 2)) })), $(".js-flickityCustom .hero").length && $(".flickity-prev-next-button").length ? $("#content .js-flickityCustom:first-child .flickity-prev-next-button").css({ bottom: halfHeroHeight - 10, top: "auto" }) : setTimeout((function () { centerHero() }), 50) } function measurePage() { var w = function viewportwidth() { $("body").css("overflow", "hidden"); var vpw, win = window; return vpw = null !== window.webkitConvertPointFromNodeToPage || "number" != typeof window.innerWidth ? document.documentElement.clientWidth : win.innerWidth, $("body").removeAttr("style"), vpw }(), h = window.innerHeight - $("nav.tree h1").outerHeight(); $("nav.tree > ul").css("height", h), w <= mobile ? $("body").hasClass("mobile") || $("body").addClass("mobile") : $("body").hasClass("mobile") && $("body").removeClass("mobile"), w > mobile && w <= tablet ? $("body").hasClass("tablet") || $("body").addClass("tablet") : $("body").hasClass("tablet") && $("body").removeClass("tablet"), $("iframe[src*=youtube], iframe[src*=vimeo], iframe[src*=flickr]").length && function vid() { var h; setTimeout((function () { $("iframe[src*=youtube], iframe[src*=vimeo], iframe[src*=flickr], iframe[src*=kaltura], iframe[src*=mediaservices], video").each((function () { $(this).attr("width", "100%"), h = Math.round(9 * $(this).width()) / 16, $(this).attr("height", h) })) }), animationSpeed) }(), $("body:not(.mobile) header.float + #content .text").length && centerHero() } function resizeFlickity() { var $carousel = $(".js-flickityCustom").flickity(); setTimeout((function () { $carousel.flickity("resize") }), animationSpeed) } measurePage(), $(window).resize((function () { measurePage() })), $(".hero").each((function (i) { if ($(this).find("a").attr("data-position", i + 1), $(this).attr("style", $(this).attr("style").replace(/ /g, "%20")), $(this).attr("data-img", $(this).attr("data-img").replace(/ /g, "%20")), $(".hero[data-img]").length && $("body:not(.mobile)").length) { var dataimg = "background-image:url(" + $(this).attr("data-img") + ")"; $(this).attr("style", dataimg), $(this).prepend('<img src="' + $(this).attr("data-img") + '" aria-hidden="true" alt="print">') } })), $(".grid.news .img[style]").each((function () { $(this).attr("style", $(this).attr("style").replace(/ /g, "%20")), $(this).prepend('<img src="' + $(this).attr("style").toString().replace("background-image:url(", "").replace(")", "").replace(/\"/gi, "") + '" aria-hidden="true" alt="print">') })), function is_touch_device() { return "ontouchstart" in window || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 }() && $("body").addClass("touch"), $(document.createElement("div")).attr("id", "overlay").click((function () { $(this).toggleClass("on"), $(".menu-on").length && toggleNav() })).insertAfter($("#container")); var navBurger = $(".menu-btn").html(), navClose = "&#10005;"; function toggleNav(focusNav) { $("body").toggleClass("menu-on"), $("body").hasClass("menu-on") ? ($(".menu-btn").html(navClose).attr("aria-pressed", "true"), !0 === focusNav && $("#nav").focus(), isSessionStorageAvailable() && window.sessionStorage.setItem("shouldAnimateMenu", !1)) : ($("#content").focus(), $(".menu-btn").html(navBurger).attr("aria-pressed", "false"), isSessionStorageAvailable() && window.sessionStorage.setItem("shouldAnimateMenu", !0)), $(".flickity-viewport").length && resizeFlickity() } document.addEventListener("keyup", (function (e) { var isSideNavOpen = document.querySelector(".menu-on"); "Escape" === e.code && isSideNavOpen && toggleNav() })); if ($('#hero-nav [href="#menu"]').replaceWith('<button class="menu-button btn ghost"><svg class="icon-menu" width="400" height="400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 400"><rect class="icon-menu__rect icon-menu__rect--1" stroke-width="0" height="50" width="400" y="75" x="0"/><rect class="icon-menu__rect icon-menu__rect--2" stroke-width="0" height="50" width="400" y="175" x="0"/><rect class="icon-menu__rect icon-menu__rect--3" stroke-width="0" height="50" width="400" y="275" x="0"/></svg></button>'), $(".menu-button").click((function () { toggleNav(!0) })), $("footer nav ul").length ? ($("nav ul li ul").length && ($("nav ul li").has("ul").addClass("parent"), $(".parent").has(".active").addClass("ancestor")), $("footer nav").clone().removeAttr("id").attr("aria-hidden", "true").appendTo("header"), $("header nav ul ul, header .secondary").remove(), $("header nav li:gt(9)").remove(), $(".hero").length && $("header nav").addClass("b"), $("footer nav").addClass("tree invert").attr("tabindex", "0").insertAfter("#container"), $("nav.tree > ul").wrap("<div>"), $("nav.tree .ancestor, nav.tree .active").addClass("expand"), $('<a href="#content" id="skipnav" class="btn">Skip to main content</a>').insertBefore("header"), $(".tree a").focus((function () { $("body").addClass("menu-on"), $(".menu-btn").html(navClose), $(".flickity-viewport").length && resizeFlickity() })), $("form.search, #sitename h1").clone().prependTo(".tree"), $(".menu-btn").clone().prependTo(".tree"), $(".roof.invert").length && $("nav.tree").addClass("b"), $("nav.tree li li.active, nav.tree li.parent.active, nav.tree li.secondary.active").length && !$(".tablet, .mobile").length ? isSessionStorageAvailable() && "true" === window.sessionStorage.getItem("shouldAnimateMenu") ? setTimeout((function () { toggleNav() }), 10) : ($("#container").css({ transition: "none" }), toggleNav(), setTimeout((function () { $("#container").removeAttr("style").focus() }), animationSpeed)) : isSessionStorageAvailable() && window.sessionStorage.setItem("shouldAnimateMenu", "true"), $(".menu-btn").click((function () { toggleNav(!0) })), $("nav.tree li.expand").length && $("nav.tree ul").scrollTop($("nav.tree li.expand").position().top), $(".tree .parent > a").each((function () { var arrowLabel = "toggle " + $(this).text() + " section", isExpanded = "false"; $(this).parent().hasClass("expand") && (isExpanded = "true"), $(document.createElement("button")).attr({ class: "arrow", "aria-pressed": isExpanded }).text(arrowLabel).insertAfter($(this)) })), $("button.arrow").click((function () { "true" === $(this).attr("aria-pressed") ? $(this).attr("aria-pressed", "false") : $(this).attr("aria-pressed", "true"), $(this).parent().stop().toggleClass("expand"), $(this).next().stop().slideToggle(animationSpeed), setTimeout((function () { }), animationSpeed) }))) : $(".menu-btn").remove(), $(".search input[name=site]").length && $(".search input[placeholder]").focus((function () { $(".searchSite").fadeIn(300) })), $("body:not(.mobile):not(.tablet):not(.touch) .tubular").length) { var playPauseButton = $("<button type='button' id='pause-play-toggle-button' class=tubular-play title='toggle play/pause'>\n                                    <svg class='icon-pause' xmlns='http://www.w3.org/2000/svg' alt='toggle play/pause button' width='40' height='40' viewBox='0 0 200 200'>\n                                        <path class='icon-pause__pause-path' d='M0 0h75v200H0zM125 0h75v200h-75z'></path>\n                                    </svg>\n                                </button>"), options = { videoId: $(".tubular").attr("data-vid"), mute: !0, repeat: !0, width: "100%", wrapperZIndex: 1, start: 1 }; $(".tubular").tubular(options), $("#tubular-container").after(playPauseButton), $(playPauseButton).on("click", (function (e) { if (e.preventDefault(), window.player) { var playerState = window.player.getPlayerState(); if (null == playerState || -1 == playerState || 0 == playerState || 3 == playerState || 5 == playerState) return; 1 == playerState ? ($("#pause-play-toggle-button").removeClass("tubular-play"), $("#pause-play-toggle-button").addClass("tubular-pause")) : ($("#pause-play-toggle-button").removeClass("tubular-pause"), $("#pause-play-toggle-button").addClass("tubular-play")) } })), setTimeout((function () { $("#tubular-container").fadeTo(1e3, 0, (function () { setTimeout((function () { $("#tubular-container, #tubular-shield").remove() }), 2e3) })) }), 3e5) } if ($("span.protect").replaceWith((function () { var url = $.trim($(this).text().replace("(through)", "@")); return $(this).hasClass("Envelope") ? '<a class="icon email" title="Email" href="mailto:' + url + '" target="_blank">Email</a>' : '<a class="icon email" href="mailto:' + url + '" target="_blank">Email</a>' })), $(".loadmore a").click((function () { var imagePath = "", getImage = $(this).parents("#content").find(".filterable.hide"); getImage.each((function () { (imagePath = $(this).attr("data-img")) && (imagePath = imagePath.replace(/ /g, "%20"), $(this).find(".img").each((function () { $(this).css("background-image", "url(" + imagePath + ")") }))) })), getImage.slice(0, 12).removeClass("hide"), getImage.length || $(this).parent().hide() })), $("p.tags").length) { $("p.tags").prepend("<strong>Categories:</strong> ").addClass("small"), $("p.tags a").each((function () { $(this).replaceWith("<span>" + $(this).text() + ", </span>") })); var cat = $("p.tags span:last-child").html().toString(); cat = cat.replace(/,\s*$/, ""), $("p.tags span:last-child").html(cat) } $("#content > .tall").length && ($(document.createElement("a")).attr({ class: "scrolldown-hidden-anchor", id: "scrolldown-hidden-anchor", tabindex: "-1", "aria-hidden": "true" }).css({ position: "absolute", top: "100vh" }).appendTo("#content > .tall"), $(document.createElement("a")).html("&#9662;").attr({ class: "scrolldown", href: "#scrolldown-hidden-anchor", id: "scrolldown", "aria-label": "scroll down" }).appendTo("#content > .tall")), $(document.createElement("a")).html("&#9652;").attr({ class: "scrolltop btn", href: "#", "aria-hidden": "true" }).appendTo("#container"), $(window).scroll((function () { $(document).scrollTop() > 2 * $(window).height() ? $(".scrolltop").addClass("on") : $(".scrolltop").removeClass("on") })); var scrollSpeed = 400; function collapse() { $("div:not(.grid) > .collapsed").nextUntil(".collapsed").hide(), $(".grid > .collapsed").siblings().hide(), $("h1.collapsed").parent().parent().nextUntil(":not(.stacked)").hide(), $(".collapsed").addClass("pointer").wrapInner('<a href="javascript:void(0);"></a>') } function scrollToHash(hash) { $(hash).length && $("html, body").animate({ scrollTop: $(hash).offset().top }, scrollSpeed) } if ($(".collapsed").length && ($("iframe").length ? setTimeout((function () { if (collapse(), window.location.hash.length > 1) { var hash = window.location.hash; $(hash).addClass("open").next().slideDown(250), scrollToHash(hash) } }), animationSpeed + 20) : collapse()), window.location.hash.length) { var pound = window.location.hash; $(pound).hasClass("collapsed") ? $(pound).addClass("open").next().slideDown(250) : $(pound).hasClass("grid") && $(pound + " > h1.collapsed").length ? $(pound + " > h1").addClass("open").siblings().stop().slideToggle(250) : $(pound).hasClass("content") && $(pound + " + .stacked").length && ($(pound + " > div > h1").hasClass("open") || ($(pound + " > div > h1").addClass("open"), $(pound).nextUntil(":not(.stacked)").slideToggle(250))), scrollToHash(pound) } function pushToDataLayer(data) { dataLayer.push(data) } $("div:not(.grid) > .collapsed").click((function () { $(this).nextUntil(".collapsed").stop().slideToggle(250), $(this).toggleClass("open") })), $(".grid > .collapsed").click((function () { $(this).siblings().stop().slideToggle(250), $(this).toggleClass("open") })), $(".content > div > h1.collapsed").click((function () { $(this).parent().parent().nextUntil(":not(.stacked)").slideToggle(250) })), $(".contact > .address").hide(), $(".inquiry").click((function () { $(this).next().stop().slideToggle(250), $(this).toggleClass("open") })), $('a[href^="#"]:not(#skipnav):not(.loadmore)').each((function () { var jumplink = $(this).attr("href"); $(this).attr({ href: "javascript:void(0);", "data-jump": jumplink }) })), $("#skipnav").click((function () { $("#content").focus() })), $('a[data-jump]:not(a[data-jump="#"])').click((function () { var h = $(this).attr("data-jump"); $(h).hasClass("collapsed") ? $(h).hasClass("open") || ($(h).addClass("open"), $(h).next().slideDown(250)) : $(h).hasClass("grid") && $(h + " > h1.collapsed").length ? $(h + " > h1").hasClass("open") || ($(h + " > h1").addClass("open"), $(h + " > h1").siblings().stop().slideToggle(250)) : $(h).hasClass("content") && $(h + " > div .collapsed").length && ($(h + " > div > h1").hasClass("open") || ($(h + " > div > h1").addClass("open"), $(h).nextUntil(":not(.stacked)").slideToggle(250))), $("html, body").animate({ scrollTop: $(h).offset().top }, scrollSpeed, (function () { $(h).find(".js-list > div:first-child").find("h2").focus() })) })), $('a[data-jump="#"]').not(".no-jump").click((function () { $("html, body").animate({ scrollTop: $("html").offset().top }, scrollSpeed) })), $("span[style]:contains('Save')").remove(), $("span[style]").removeAttr("style"), $("body").prepend('<img id="wordmarkPrint" alt="" src="//www.dsu.edu/common/standard-v6/images/dsu-wordmark.png" />'), $("#js-current-year").text((new Date).getFullYear()); var contentType = null !== document.querySelector('meta[property="og:type"]') ? document.querySelector('meta[property="og:type"]').getAttribute("content") : "", authorNames = getAuthorNames(), categories1 = null !== document.querySelector('meta[name="categories-1"]') ? document.querySelector('meta[name="categories-1"]').getAttribute("content") : "", categories2 = null !== document.querySelector('meta[name="categories-2"]') ? document.querySelector('meta[name="categories-2"]').getAttribute("content") : "", concentrations = null !== document.querySelector('meta[name="concentrations"]') ? document.querySelector('meta[name="concentrations"]').getAttribute("content") : "", degrees = null !== document.querySelector('meta[name="degrees"]') ? document.querySelector('meta[name="degrees"]').getAttribute("content") : "", globalCategories = null !== document.querySelector('meta[name="global-categories"]') ? document.querySelector('meta[name="global-categories"]').getAttribute("content") : "", entityLangCode = $("html").attr("lang"), entityTitle = null !== document.querySelector("#content .content h1:first-of-type") ? document.querySelector("#content .content h1:first-of-type").innerText : "", publicationDate = $("#content .date").length > 0 && "" !== $("#content .date").text() ? $("#content .date").text() : ""; if (pushToDataLayer({ author: authorNames, country: "US", concentrations, degrees, pageCategories: { "categories-1": categories1, "categories-2": categories2, global: globalCategories }, entityBundle: contentType, entityLangcode: entityLangCode, entityStatus: 1, entityTitle, entityType: "page", environment: function getEnvironmentName() { var baseUrl = document.location.host; return "dsu.edu" === baseUrl || "www.dsu.edu" === baseUrl ? "live" : baseUrl.replace(".andrew.dsu.edu", "") }(), language: entityLangCode, pageType: contentType, publicationDate }), void 0 !== webVitals) { var process = function (obj) { var dlObj = { event: "coreWebVitals", webVitalsMeasurement: {} }, cwvObj = { name: obj.name, id: obj.id, value: obj.value, delta: obj.delta, valueRounded: Math.round("CLS" === obj.name ? 1e3 * obj.value : obj.value), deltaRounded: Math.round("CLS" === obj.name ? 1e3 * obj.delta : obj.delta) }; dlObj.webVitalsMeasurement = cwvObj, pushToDataLayer(dlObj) }; webVitals.getFID(process), webVitals.getCLS(process), webVitals.getLCP(process), webVitals.getFCP(process), webVitals.getINP(process), webVitals.getTTFB(process) } function getAuthorNames() { var authors = document.querySelector("#content .content .contact > p span"); return null !== authors ? authors.textContent.replace(/(\r\n|\n|\r)/gm, "").replace("By:", "").replace("By ", "").replace(/Email/g, "").replace(/(\r\n|\n|\r|\f)/gm, "").replace(/\s{2,}/g, "|").trim().split("|").filter((x => "" !== x)).join(", ") : "" } if (contentType && "article" === contentType.toLowerCase()) { var readTime = function calculateReadTime(querySelector) { var content = document.querySelector(querySelector), wordCount = (null !== content ? content.innerText : "").trim().split(/\s+/).length; return { wordCount, readTime: Math.round(wordCount / 200) } }("#content .content > div:not(.sidebar)"), articleName = null !== document.querySelector("#content .content h1:first-of-type") ? document.querySelector("#content .content h1:first-of-type").innerText : "", img = null !== document.querySelector('meta[property="og:image"]') ? document.querySelector('meta[property="og:image"]').getAttribute("content") : ""; pushToDataLayer({ event: "article_read", read_time_threshold: readTime.readTime, page_path: window.location.pathname, article_name: articleName, article_length: readTime.wordCount, author: getAuthorNames(), image_name: img }) } var expandables = document.querySelectorAll(".collapsed"); expandables.length && expandables.forEach((function (expandable) { var summaryText = $(expandable).closest("h2").text(); expandable.addEventListener("click", (function () { pushToDataLayer({ event: "expand_content", user_action: expandable.classList.contains("open") ? "open" : "close", click_text: summaryText }) })) })); var menuButton = document.querySelector(".menu-btn"); menuButton && menuButton.addEventListener("click", (() => { pushToDataLayer({ event: "click_nav-toggle-button", user_action: "true" === document.body.classList.contains("menu-on") ? "close" : "open" }) })); var navItemToggleButtons = document.querySelectorAll("#nav .arrow"); navItemToggleButtons.length && navItemToggleButtons.forEach((navItemToggleButton => { navItemToggleButton.addEventListener("click", (() => { pushToDataLayer({ event: "click_nav-item-toggle-button", user_action: "true" === navItemToggleButton.getAttribute("aria-pressed") || "block" === navItemToggleButton.closest("ul").style.display ? "close" : "open", click_text: navItemToggleButton.innerText }) })) })), function getLinks() { var links = document.querySelectorAll("a"); links.length && links.forEach((function (link) { $(link).on("click", (function (event) { if ($(link).is(".collapsed, .collapsed > a")) return !0; if ($(link).is("#nav .arrow")) return !0; var linkText = link.innerText ? link.innerText.replace(/[\r\n" "]+/g, " ").substr(0, 60) : ""; linkText = linkText.length >= 60 ? `${linkText} …` : linkText; var linkUrl = link.getAttribute("href") || ""; link.hasAttribute("href") && (!1 === (linkUrl.includes("mailto:") || linkUrl.includes("tel:") || linkUrl.includes("://")) && ("/" === linkUrl[0] && (linkUrl = linkUrl.slice(1)), linkUrl = function convertToAbsolutePath(location, relative) { for (var relativeParts = relative.split("/"), locParts = `${location.protocol}//${location.host}`, locTemp = [], i = 0; i < relativeParts.length; i++)".." === relativeParts[i] ? locTemp.pop() : locTemp.push(relativeParts[i]); return locParts + `/${locTemp.join("/")}` }(document.location, linkUrl))); var linkIsExternal = !1; linkUrl.includes(window.location.origin) || (linkIsExternal = !0); var linkIsContact = !1; (linkUrl.includes("mailto:") || linkUrl.includes("tel:")) && (linkIsContact = !0); var headerNav = $(link).is("header nav a") ? "header" : "", sideNav = $(link).is("#nav a:not(.arrow)") ? "side" : "", footerNav = $(link).is("#content > footer a") ? "footer" : "", breadcrumbNav = $(link).is(".breadcrumbs a") ? "breadcrumb" : "", navArea = headerNav || sideNav || footerNav || breadcrumbNav, closestHeadingText = function findClosestHeadingText(element) { var closestHeading = function findClosestHeading(element) { var headingSelectors = "h1, h2, h3, h4, h5, h6", elementSelectors = [".grid .events", ".grid .list", ".grid .photo", ".grid", "div", "details", "section"], closestHeading = ""; for (let i = 0; i < elementSelectors.length; i++) { var selector = elementSelectors[i]; if (closestHeading = element.closest(selector) ? element.closest(selector).querySelector(headingSelectors) : "") break } return closestHeading || "" }(element); return closestHeading ? closestHeading.innerText : "" }(link), linkType = "text", isLinkButton = link.classList.contains("btn"); linkType = isLinkButton ? "button" : linkType; var isCallToAction = link.classList.contains("cta"); linkType = isCallToAction ? "cta" : linkType; var img = link.querySelector("img"); linkType = img ? "image" : linkType; var imgName = img ? img.getAttribute("src").split("/").pop().split("?").shift() : "", slidePosition = link.closest(".flickity-slider") ? $(link).parents(".flickity-slider").find(".grid.is-selected").index() : "", sectionId = link.closest("[id]") ? link.closest("[id]").getAttribute("id") : "", gridElementPosition = ""; if (link.closest(".grid div")) { var linkGridBox = link.closest(".grid div"); gridElementPosition = [].slice.call(linkGridBox.parentElement.querySelectorAll(".grid div")).indexOf(linkGridBox) } var data = {}; if (linkIsContact) data.event = "contact", data.link_url = linkUrl, data.nearest_subheading = closestHeadingText, data.click_element_type = linkType, data.link_text = linkText, linkUrl.includes("tel:") ? data.contact_type = "phone" : linkUrl.includes("mailto:") && (data.contact_type = "email"); else if ("" !== navArea) data.event = "nav_click", data.link_text = linkText, data.link_url = linkUrl, data.location_on_page = navArea, data.click_type = linkType; else if (isCallToAction || isLinkButton) data.event = "cta_click", data.link_text = linkText, data.link_url = linkUrl, data.click_element_type = linkType, data.cta_type = linkType; else if (linkIsExternal) { data.event = "click"; var externalUrl = new URL(linkUrl); data.link_url = linkUrl, data.link_domain = externalUrl.hostname, data.outbound = !0, data.click_element_type = linkType, data.nearest_subheading = closestHeadingText, data.image_name = imgName, data.grid_element_position = gridElementPosition, data.section_id = sectionId, data.click_text = linkText } else data.event = "link_click", data.link_url = linkUrl, data.section_id = sectionId, data.click_element_type = linkType, data.nearest_subheading = closestHeadingText, data.slide_position = slidePosition, data.image_name = imgName, data.grid_element_position = gridElementPosition, data.click_text = linkText; pushToDataLayer(data) })) })) }() })); var RSSMODULE = function (module) { var loadingHTML = '<div class="spinner"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'; function getResource(url, callback, maxArticlesToDisplay, style, type, options, uniqueClass) { $("." + uniqueClass).append(loadingHTML), url = url.replace(/&/g, "%26"), jQuery.ajax({ url: "/cmsint/rss?url=" + url, type: "get", success: function (data) { $(".spinner").remove(), callback(data, maxArticlesToDisplay, style, type, options, uniqueClass) } }).fail((function (xhr, err) { $(".spinner").remove(), function returnError(uniqueClass) { return $(".internal-errors." + uniqueClass).append('<span class="error">To preview the feed, publish this page to staging and view on cms-staging.andrew.dsu.edu.</span>'), !1 }(uniqueClass) })) } function formatDate(dateObj, isGrid) { var jsDate = new Date(dateObj); return isGrid ? { 0: "Sunday", 1: "Monday", 2: "Tuesday", 3: "Wednesday", 4: "Thursday", 5: "Friday", 6: "Saturday", 7: "Sunday" }[jsDate.getDay()] + ", " + { 0: "January", 1: "February", 2: "March", 3: "April", 4: "May", 5: "June", 6: "July", 7: "August", 8: "September", 9: "October", 10: "November", 11: "December" }[jsDate.getMonth()] + " " + jsDate.getDate() + ", " + jsDate.getFullYear() : { day: jsDate.getDate(), month: { 0: "Jan", 1: "Feb", 2: "Mar", 3: "Apr", 4: "May", 5: "Jun", 6: "Jul", 7: "Aug", 8: "Sep", 9: "Oct", 10: "Nov", 11: "Dec" }[jsDate.getMonth()] } } function scrubDescription(description) { return description.replace(/<[^>]*>/g, " ").replace(/\s{2,}/g, " ").trim() } function findNewsImage(item) { var image = item.getElementsByTagName("media:content"), imageUrl = image && image[0] && image[0].getAttribute("url"); if (imageUrl) return imageUrl; var description = $(item).find("description").text(), fakeDom = document.createElement("html"); fakeDom.innerHTML = description; var url = $(fakeDom).find("img").attr("src"); return url || null } function handleRSSParsing(xml, maxArticlesToDisplay, style, type, options, uniqueClass) { /[0-9]/g.test(maxArticlesToDisplay) || (maxArticlesToDisplay = null); var rssHtml, children = $(xml).find("channel").children(), entries = $(children).filter((function (index, node) { return "item" === node.tagName })).map((function (index, node) { var title = node.getElementsByTagName("title")[0], link = node.getElementsByTagName("link")[0], description = node.getElementsByTagName("description")[0], pubDate = node.getElementsByTagName("pubDate")[0]; return { title: title && title.textContent, link: link && link.textContent, description: description && description.textContent, pubDate: pubDate && pubDate.textContent, descriptionTextOnly: $(node).find("description").text(), image_url: findNewsImage(node) } })), maxArticles = entries && entries.slice(0, maxArticlesToDisplay || 6); if (type && "grid" === type) rssHtml = ""; else if ("mixed" === type) rssHtml = "<ul>"; else if ("news" === type) { var heading = options ? options.heading : null; if (rssHtml = document.createElement("div"), $(rssHtml).addClass("grid news " + style + " column" + (options && options.columns || 3) + " " + (options && options.bgImage)), heading && "" !== heading) { var headingHtml = "<h1>" + heading + "</h1>"; $(rssHtml).append(headingHtml) } "" !== options.optionalId && $(rssHtml).attr("id", options.optionalId) } else $("." + uniqueClass).addClass(style).addClass("events"), rssHtml = options && options.heading ? "<h1>" + options.heading + "</h1><ul>" : "<ul>"; function addMoreLink() { var moreLink = options.moreLink, moreLinkURL = options.moreLink.url; if (moreLink && "" !== moreLinkURL) { var target = moreLink.newWin ? 'target="_blank"' : ""; rssHtml += '<p><a class="btn ghost" href="' + moreLinkURL + '" ' + target + ">More events</a></p>" } } if ($(maxArticles).each((function (index, item) { var dateInPost, description = item && item.description; if ("news" !== type) try { dateInPost = (chrono && chrono.strict.parse(scrubDescription(description)))[0].start.date() } catch (err) { try { dateInPost = (chrono && chrono.parse(scrubDescription(item.pubDate)))[0].start.date() } catch (error) { console.log("Date Parsing Error", error), dateInPost = "" } } else dateInPost = scrubDescription(item.pubDate); if ("grid" === type) { var jsDate = formatDate(dateInPost, !0), link = options && options.newWin ? '<a href="' + item.link + '" target="_blank">' : '<a href="' + item.link + '">'; rssHtml += "<div>" + link + '<small class="icon-cal">' + jsDate + "</small> <h2>" + item.title + "</h2></a></div>" } else if ("news" === type) $(rssHtml).append(function rssNewsTemplate(data, options) { var template = '<a href="XX_LINK"><div aria-label="XX_ALT" class="img" role="img" style="background-image:url(XX_IMAGE_URL)"><img src="XX_IMAGE_URL" aria-hidden="true" alt="print"> </div><small>XX_DATE</small> <h2>XX_TITLE</h2> <span>XX_DESC</span></a>'; template = template.replace("XX_LINK", data.link).replace("XX_ALT", data.title).replace(/XX_IMAGE_URL/g, data.image_url).replace("XX_DATE", formatDate(data.pubDate, !0)).replace("XX_TITLE", data.title).replace("XX_DESC", scrubDescription(data.descriptionTextOnly)); var templateDOM = document.createElement("div"); return templateDOM.innerHTML = template, options.newWin && $(templateDOM).find("a").attr("target", "_blank"), options.includePubDate || $(templateDOM).find("small").remove(), options.includeSummary || $(templateDOM).find("span").remove(), options.includeImages || ($(templateDOM).find("img").remove(), $(templateDOM).find("div.img").remove(), $(templateDOM).find(".img").attr("style", "")), data.image_url && "" != data.image_url || ($(templateDOM).find("img").remove(), $(templateDOM).find(".img").attr("style", "")), templateDOM }(item, options)); else { jsDate = formatDate(dateInPost), link = options && options.newWin ? '<a href="' + item.link + '" target="_blank">' : '<a href="' + item.link + '">'; rssHtml += "<li>" + link + "<span><span>" + jsDate.month + "</span>" + jsDate.day + "</span>" + item.title + "</a></li>" } })), "grid" === type) { var $firstGridColumn = $($("." + uniqueClass)); $firstGridColumn.addClass("boxes news " + style), $firstGridColumn.append(rssHtml) } else "news" === type ? $("." + uniqueClass).append(rssHtml) : "mixed" === type ? (addMoreLink(), rssHtml += "</ul>", $("." + uniqueClass).append(rssHtml)) : (addMoreLink(), rssHtml += "</ul>", $(".sidebar ." + uniqueClass).append(rssHtml)) } return module.detectAndParseFeed = function detectAndParseFeed(feed, maxArticlesToDisplay, style, type, options, uniqueClass) { getResource(feed, handleRSSParsing, maxArticlesToDisplay, style, type, options, uniqueClass) }, module }(RSSMODULE || {}); function OnPageFiltering(filterDomId) { var sectionID, selectedFilters = [], savedFiters = function getSavedFilters(indexName) { try { var saved = window.localStorage.getItem(indexName); if (saved) saved = JSON.parse(saved) } catch (e) { console.warn(e) } return saved }(filterDomId); function selectHandler(jquerySelect) { var selectObjectAttr = jquerySelect.target.attributes, value = jquerySelect.target.value, name = selectObjectAttr.name.value, idNum = 1 * (selectObjectAttr["data-id"].value || "").split("-")[1], noSpaces = value.replace(/ /g, ""); sectionID = selectObjectAttr["data-section-id"].value || "", "filter-name" !== name && (selectedFilters[idNum] = noSpaces), filter(sectionID), function putSavedFilters(indexName) { var filtersInDom = $('div[data-index-id="' + indexName + '"] .filter'), filtersFound = []; filtersInDom.each((function (index, filter) { var currentFilter = { section: $(filter).attr("data-section-id"), name: $(filter).attr("name"), value: $(filter).find(":selected").val() }; filtersFound.push(currentFilter) })); try { var stringifyFiltersFound = JSON.stringify(filtersFound); window.localStorage.setItem(indexName, stringifyFiltersFound) } catch (e) { console.warn(e) } }(filterDomId) } function clearAllFilters(event) { event.stopPropagation(), selectedFilters = [], filterByName = "none", $('div[data-index-id="' + filterDomId + '"]').find(".filter").prop("selectedIndex", 0).change(); window.localStorage.setItem(filterDomId, ""); countDisplayedElementsAndUpdateMessage(filterDomId) } function countDisplayedElementsAndUpdateMessage(filterDomId) { var filterableElements = $("[data-filter-id='" + filterDomId + "'] .filterable:not(.hide)"), messageContainer = $("#results-message-" + filterDomId); if (filterableElements.length) { var elementCount = filterableElements.length, contentType = $(messageContainer).attr("data-content-type") || ""; elementCount > 1 ? $(messageContainer).text(elementCount + " " + contentType + "s displayed.") : $(messageContainer).text(elementCount + " " + contentType + " displayed.") } else $(messageContainer).text("Sorry, no results to display."), $(".loadmore").addClass("hide") } function filter(sectionID) { var filterableList = $("#" + sectionID).find("[data-categories]"), filterByName = $("select[name='filter-name'][data-section-id='" + sectionID + "']").val() || "none"; $(".no-jump").attr("data-jump", ""), filterableList.each((function (index, element) { var categories = $(element).attr("data-categories"), firstLetterLastName = function splitLastName(value) { return value && value.length ? value.substring(0, 1).toLowerCase() : "" }($(element).attr("data-lastname")); !function compareCategory(stringOfValues) { for (var matches = 0, nonNoneValues = 0, values = stringOfValues.split("|"), i = 0; i < selectedFilters.length; i++) { void 0 === selectedFilters[i] && (selectedFilters[i] = "none"), "none" !== selectedFilters[i] && nonNoneValues++; for (var cleanedSelectedFilter = selectedFilters[i].trim().toLowerCase(), j = 0; j < values.length; j++)values[j].trim().toLowerCase().replace(/ /g, "") === cleanedSelectedFilter && matches++ } return nonNoneValues === matches }(categories) || filterByName !== firstLetterLastName && "none" !== filterByName ? $(element).parents(".filterable").addClass("hide") : ($(element).parents(".filterable").removeClass("hide"), $(".loadmore").addClass("hide")) })), function revealAllImagesInSearch($sectionNode) { $sectionNode.find(".filterable:not(.hide)").each((function () { imagePath = $(this).attr("data-img"), imagePath && (imagePath = imagePath.replace(/ /g, "%20"), $(this).removeAttr("data-img").find(".img").each((function () { $(this).css("background-image", "url(" + imagePath + ")") }))) })) }($("div[data-filter-id=" + filterDomId + "]")), countDisplayedElementsAndUpdateMessage(filterDomId) } function bindAllSelectors() { $("div[data-index-id=" + filterDomId + "]").find("select").change(selectHandler), $("div[data-index-id=" + filterDomId + "]").find(".js-clear-all").click(clearAllFilters) } savedFiters && function selectSavedFilters(filters) { filters.forEach((function (filter) { var name = filter.name, value = filter.value, section = filter.section; $('select[data-section-id="' + section + '"][name="' + name + '"] option[value="' + value + '"]').attr("selected", "selected") })), setTimeout((function () { $("select").change() }), 100) }(savedFiters), $("div[data-index-id=" + filterDomId + "]").find(".search").on("keyup", (function () { setTimeout((function () { filter(sectionID) }), 10) })), bindAllSelectors(), this.selectHandler = selectHandler, this.clearAllFilters = clearAllFilters, this.bindAllSelectors = bindAllSelectors } window.RSSMODULE = RSSMODULE, document.addEventListener("DOMContentLoaded", (function (event) { $('input[name="q"]').val(""); var allPageFilters = $(".js-onpage-filtering"); if ($.each(allPageFilters, (function (index, value) { var dataIndexId = $(value).attr("data-index-id"), dataIndexIdElement = $("div[data-index-id='" + dataIndexId + "']"), allSectionLabels = (dataIndexIdElement.find(".js-clear-all"), dataIndexIdElement.find(".search"), new OnPageFiltering(dataIndexId), $(dataIndexIdElement).find("label")), allLabelText = ""; $.each(allSectionLabels, (function (index, value) { var text = $(value).text(); allLabelText += text, index !== allSectionLabels.length - 1 && (allLabelText += ", ") })), $('[data-index-id ^= "bio-index"]').length && (allLabelText = allLabelText.replace("Last Name", "First Letter of Last Name")); var existingText = $("[data-accessibility-id='" + dataIndexId + "']").text(), separateByComma = allLabelText.split(","), fullSentence = (separateByComma.shift(), existingText.trim() + "," + separateByComma.join(",")); $("[data-accessibility-id='" + dataIndexId + "']").text(fullSentence) })), "undefined" != typeof List) { var options = { valueNames: ["name"], listClass: "js-list" }, listElements = $(".section-id"); $.each(listElements, (function (index, element) { var sectionId = $(element).attr("id"), sectionIndexId = $(element).attr("data-filter-id"), sectionIndexIdElement = $("[data-index-id='" + sectionIndexId + "']"), filtersList = new List(sectionId, options), searchField = sectionIndexIdElement.find(".search"), resetButton = sectionIndexIdElement.find(".js-clear-all"); $(searchField).on("keyup", (function () { var searchString = $(this).val(); filtersList.search(searchString) })), resetButton.click((function () { searchField.val(""), filtersList.search() })) })) } })) })();